
id: lora_sdr_frame_sync
label: Frame sync
category: '[LoRa_RX]'

parameters:
-   id: samp_rate
    label: Samp_rate
    dtype: float
    hide: all
-   id: bandwidth
    label: Bandwidth
    dtype: int
-   id: sf
    label: Sf
    dtype: int
-   id: impl_head
    label: Impl_head
    dtype: bool
-   id: sync_word
    label: Sync word
    dtype: int_vector
    default: 0x12
    hide: part

inputs:
-   domain: stream
    dtype: complex
-   domain: message
    id: frame_info

outputs:
-   domain: stream
    dtype: complex
    vlen: ${ 2**sf }

templates:
    imports: import lora_sdr
    make: lora_sdr.frame_sync(${bandwidth}, ${bandwidth}, ${sf}, ${impl_head}, ${sync_word})

documentation: |-
    Block taking care of the preamble detection, CFO and STO estimation and correction.
        Parameters:
            Bandwidth: Bandwidth
            sf: spreading factor
            impl_head: usage of an implicit header (explicit will be used otherwise)
            sync_word: The frame sync word. Can be specified as an hex or dec value (e.g. 0x12 or 18), or directly as the decimal values modulating the two network identifiers upchirps in the preamble (e.g [8,16]).

        Input:
            in: stream of complex valued sampled
            frame_info: message produced by the block header decoder, containing the frame coding rate, the payload length, and the presence of a payload crc.

        Output:
            out: stream of vectors of 2^sf samples

file_format: 1
